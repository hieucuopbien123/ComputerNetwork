-> Dưới góc nhìn dần dần qua sự phát triển của internet:
Trong hệ thống mạng có hàng trăm triệu máy tính, để 2 máy tính tìm đc nhau và có thể giao tiếp vs nhau thì cần có 3 điều kiện: Biết địa chỉ ip của nhau, biết 1 cổng port mở và chưa được dùng của máy kia, cả 2 máy dùng cùng một giao thức truyền tải dữ liệu.

Mỗi máy tính trong mạng đều đc định danh bằng IP. Thế nhưng 1 máy tính trong mạng lại có thể có nhiều địa chỉ IP khác nhau. Mỗi máy trung bình có 3 địa chỉ:
+) Địa chỉ IP nội tại: localhost hay loopback ip, máy tính trỏ đến chính bản thân mình. Đó là 127.0.0.1
+) Địa chỉ IP mạng nội bộ: nhà ta có 1 cái router mạng và nhiều máy tính cùng kết nối vào mạng đó => nhờ vào nó mà liên lạc k cần thông qua mạng internet
+) Địa chỉ IP internet: là địa chỉ liên lạc với máy tính khác trên mạng internet khắp thế giới.
=> Nv, nếu hai máy muốn liên lạc mà nằm trong cùng một chung cư xài cùng 1 mạng thì địa chỉ ip nội bộ là đủ r, còn kết nối thông qua internet thì dùng địa chỉ ip internet. Còn địa chỉ IP nội tại tự gửi tự nhận để kiểm thử phần mềm, mô phỏng hoạt động của mạng.

Để tìm ip nội bộ trên win => cmd -> lệnh ipconfig sẽ hiện ra ip chỗ address
Để tìm ip trên internet thì phải tra mạng vì khi gửi ra ngoài thì NAT mới dùng cho public address

Cổng(port) là một thứ giúp ta thực hiện 1 chức năng khi giao tiếp qua mạng. Nhờ vào nó mà ta có thể vừa nhận tin nhắn lại vừa lướt web, nhận thư điện tử cùng 1 lúc. 1 cổng là 1 số nguyên từ 0 đến 65535. Vd: cổng 80 chuyên xử lý các yêu cầu của trang web, cổng 21 sử dụng bởi các CT FTP(File Transfer Protocol), cổng 110 để nhận thư,... Các cổng thông thường từ 0 đến 1024 đều đã được sử dụng nên các cổng trống để ta tùy ý sử dụng sẽ nằm từ 1024 đến 65535.
=> Để tránh bất cứ CT nào cx liên lạc đến máy tính của ta mà k cần sự cho phép thông qua các cổng k sử dụng -> họ dùng tường lửa(firewall). Nó sẽ chặn hầu hết các cổng và chỉ mở 1 số cổng an toàn trên máy -> nếu muốn dùng, ta cũng phải allow tường lửa luôn.

Giao thức truyền tải dữ liệu: có đến cả trăm loại luôn -> giao thức cấp độ cao và giao thức cấp độ thấp. Cũng chỉ là ở các tầng khác nhau thôi
Cấp độ cao: luôn sẵn sàng sử dụng HTTP,FTP,POP3. Ví dụ FTP sử dụng cổng 21 để trao đổi tệp tin -> có sẵn nên dễ sử dụng nhưng ta k thể tự chỉnh sửa đc
Cấp độ thấp: cần ta phải thêm các lệnh để thực hiện như TCP,UDP -> ta có thể làm tất cả những gì ta muốn

Dữ liệu khi truyền sẽ đc chia thành gói chứ k truyền cả cục 1 lúc, mỗi gói lại đc chia thành gói nhỏ hơn -> điều này tùy thuộc vào giao thức chứ t k biết đc.
Xét giao thức TCP(Transmission Control Protocol): nó sẽ thiết lập đường truyền hai máy, sau đó mới gửi dữ liệu -> kiểm tra nếu thất lạc -> gửi gói khác thay thế -> mọi gói tới đúng nơi đúng thứ tự nhưng chậm(thg dùng gửi tin nhắn). Giao thức TCP k cho phép ng dùng can thiệp vc gói tin đc chia nhỏ như thế nào nhưng luôn chắc chắn các gói tin sẽ tới đủ và đúng thứ tự -> điều này khiến ta khi dùng k cần sắp xếp lại gói tin sau khi nhận
Xét giao thức UDP(User Datagram Protocol): k cần thiết lập đường truyền và truyền nhanh hơn -> có thể thất lạc tập tin or gửi lộn xộn(thg dùng cho game, video call)

Đó là cách hai máy trao đổi với nhau và cách gói tin đc truyền đi -> thế nhưng thực tế có nhiều người kết nối chứ k chỉ có 2 người. Giả sử ta muốn có 1 ứng dụng trao đổi tin nhắn thì 1 người nhắn đc cho 10 người khác cơ -> lúc đó cần kiến trúc mạng:
Kiến trúc client-server: máy chủ gửi đến cho toàn bộ người dùng, mọi gói tin đều gửi đến máy chủ r mới phân tán đi
Kiến trúc P2P(Peer-To-Peer): tất cả đều là máy chủ, gửi cho ai cx đc rất nhanh-> phức tạp hơn. VD: 3 máy kết nối theo hình tam giác.

World Wide Web(WWW) gọi tắt là web: là mạng lưới toàn cầu các thông tin mà ta truy cập đc thông qua các thiết bị kết nối internet. Nó là một tập hợp các website(các trang HTML) đc liên kết bởi các liên kết siêu văn bản,đc xác định bằng URL. Nó chỉ là 1 dịch vụ của internet, dịch vụ này cho chúng ta tìm kiếm thông tin bằng cách đi từ tài liệu này sang tài liệu khác, ngoài Web ra còn có các dịch vụ khác như thư điện tử,.. 
Thuở ban đầu đã có các siêu văn bản trên internet r, nhưng họ chưa nghĩ rằng dùng nó để truyền tải thông tin. Về sau WorldWideWeb đầu tiên ra đời chỉ có 1 website. Sau đó nó có bước tiến mới với web server để lưu trữ dữ liệu, nó cung cấp cho người dùng dịch vụ WorldWideWeb, xử lý các yêu cầu từ client thông qua giao thức HTTP để truy cập vào 1 trang web cụ thể miễn phí. Nhờ đó mà ng ta có thể trao đổi thông tin với nhau thông qua internet. Nhu cầu tăng dẫn đến số lượng web server trên thế giới ngày càng tăng. Trên thế giới nhiều người dùng các thiết bị của mình kết nối với internet gọi là client, họ kết nối vào 1 trong số những cái web server đó. Liên kết xong là họ có thể sử dụng dịch vụ WWW để truy cập các trang HTMl và các dịch vụ khác trên mạng. Do có quá nh máy nên cần xác định máy này vs máy khác thông qua địa chỉ ip. 

Máy chủ hay server được hiểu là máy chứa data và máy khác dùng data lấy từ máy chủ gọi là client. Trong thực tế, chính laptop bth của ta cũng có thể trở thành server nếu ta cho laptop lưu database xong r cung cho máy khác sử dụng. Vd: xem ti vi thì dữ liệu cx đc lấy từ máy chủ đưa lên trạm phát sóng và phát tới tivi. Do đó, server là một từ chỉ rất chung, ta thg nói server của cái gì, ví dụ database server, print server,... Nếu nói cái laptop của ta là máy chủ thì quá vớ vẩn, VD: khi ta dùng facebook thì dữ liệu trên facebook k thể nào là từ 1 máy tính đc, nó là một máy chủ chuyên để lưu dữ liệu có dung lượng cực lớn và tốc độ cao, hoạt động liên tục để đảm bảo mạng lưới máy tính của nó hoạt động trơn tru. Và chính cái máy chủ đó cx đc kết nối vs tập hợp mạng máy tính mở rộng => bất cứ ai có thiết bị kết nối internet đều có thể truy cập -> cứ như v các client kết nối vs server, các server lại kết nối vs các server khác thông qua tập hợp mạng máy tính tạo thành mạng lưới internet.
Web server có thể là phần mêm server hoặc nó là 1 phần cứng phục vụ cho vc chạy 1 phần mềm web server trên nó. Bất kỳ máy tính nào cx có thể trở thành web server cung cấp dịch vụ WWW bằng cách cài phần mềm server software sau đó kết nối internet.
Câu hỏi: Ví dụ ta tạo ra 1 website phimmoi. Thì ta có database lưu phim riêng thuê host để lưu dữ liệu phim trên đó -> ta dùng máy chủ đó kết nối internet vào mạng lưới thông tin toàn cầu -> thg nào vào trang web của ta (trang HTML này gọi là 1 thành phần của WWW đó) thì có thể truy cập vào server của ta để lấy phim ra xem -> ez
VD: ta tạo trang web bán mỹ phẩm thì ta phải thuê 1 cái host cung cấp server cho mình dùng trong trang web -> thg nào vào web thì gọi đến cái server đó để lấy dữ liệu
=> Tóm lại là các thiết bị có khả năng kết nối mạng cứ tạo server r client liên tục r liên két với nhau, tất cả lại liên kết với mạng lưới toàn cầu(server của google/bing liên kết với các server của các website) -> nhờ đó mà tạo ra mạng lưới internet chằng chịt k có điểm bắt đầu và kết thúc.
Khi sử dụng 1 cái web server nào đó để lưu dữ liệu của mình -> thì dữ liệu đó luôn sẵn sàng bất cứ khi nào có internet, dữ liệu đó có địa chỉ ip cố định, được bảo dưỡng và bảo vệ bởi nhà cung cấp server.

Có nhiều loại như: 
Máy chủ vật lý(HDD,CPU,RAM) nó lưu dữ liệu và cung cho ta 
Máy chủ ảo VPS(virtual private server): 1 máy chủ vật lý tách thành nh máy chủ ảo(quy mô k lớn); 
Máy chủ ảo cloud server: chạy trong môi trường điện toán đám mây(quy mô k giới hạn)
Có nhiều hãng nổi tiếng cung máy chủ vât lý như Dell,HP,... có dung lượng cực lớn. 
Máy chủ của google đặt ở rất nhiều nơi trên thế giới chứ kp là 1 máy lớn đâu. Google drive là phần mềm sử dụng máy chủ ảo.
Dịch vụ cho thuê máy chủ gọi là dịch vụ hosting. Ta có thể lưu dữ liệu thông qua server là data-center -> nó là cơ sở kho lưu trữ đc kết nối vs các nhà mạng mà các doanh nghiệp sử dụng để quản lý. Ta cx có thể lưu dữ liệu qua đám mây nghĩa là dữ liệu đc lưu trữ bên ngoài và truy cập thông qua internet. Có thể là private(lưu trong CSDL của nhà cung cấp) or public(Office365,DropBox,...)

URL(Uniform Resource Locators-định vị tài nguyên thống nhất): là địa chỉ của tài nguyên trên web(bị dns mã hóa thành ip của server chứa dữ liệu về tài nguyên html đó khi truy cập)

Trình duyệt web là thứ chúng ta dùng để truy cập vào các trang web thông qua vc tra cứu. VD: Google Chrome,..

Thực ra khi mạng máy tính mới xuất hiện, chúng thường dùng giải pháp độc quyền tức là một công ty sẽ sản xuất ra mọi thứ dùng cho mạng. Dẫn đến là có nhiều mạng máy tính khác nhau độc lập do từng nơi cung cấp. Để có thể kết nối các mạng đó lại với nhau, tổ chức ISO đã phát triển mô hình OSI cho phép các nhà sx tạo nên các giao thức protocol để dùng cho mô hình này, để giao tiếp vs mạng khác. OSI có 7 tầng còn TCP/IP chỉ có 4 tầng. Nhưng quan trọng là nó là một bộ giao thức cung cấp các giao thức. Các protocol đó là thứ giúp dữ liệu đc truyền đi trên mạng. Để hai cái máy tính nói chuyện đc với nhau thì chúng phải có cùng một giao thức(nó như là ngôn ngữ v)
VD: gửi email đi thì chương trình gửi thư sẽ gửi tới cụm giao thức-> chúng sẽ thực hiện qua các tầng của giao thức để gửi dữ liệu tới phương tiện truyền thông mạng(cable or mạng k dây) -> cụm giao thức của máy tính khác sẽ nhận dữ liệu xử lý qua các tầng và gửi nó tới máy chủ email.
Cụm giao thức(từng tầng) làm nhiều điều và mô hình OSI mô tả những gì nó làm => đó là bản chất của vc truyền dữ liệu. Khi truyền dữ liệu, 1 lớp trên sẽ nhận, xử lý, thêm các 'thông tin điều khiển' của riêng lớp đó và gửi cho lớp dưới. Khi nhận thì 1 lớp dưới sẽ nhận, xử lý r gỡ bỏ 'thông tin điều khiển' từ dữ liệu và gửi lên lớp trên => mỗi lớp sẽ thêm hoặc gỡ những thông tin điều khiển mà nó mang trong đó
Lớp 7 Application: lớp ứng dụng làm giao diện giữa Ct đang gửi or nhận data. Vd: khi gửi email thì Ct email sẽ tiếp xúc với lớp này.
Lớp 6 Presentation: lớp chuyển biến đổi dạng dữ liệu tới định dạng chung cho các giao thức thao tác. VD: bđ thành ASCII nếu kp 
Lớp 5 Session: lớp này cho phép hai Ct thiết lập giao dịch liên lạc, 2 Ct sẽ định nghĩa truyền dữ liệu ntn và đánh dấu qúa trình truyền, nếu lỗi thì nó sẽ khởi động lại từ lần đánh dấu truyền tốt nhất cuối cùng mà kp truyền lại từ đầu.
Lớp 4 Transport: lớp này nhận dữ liệu từ lớp session và chia thành gói truyền trên mạng. Tại máy tính nhận thì lớp này sẽ đặt các gói theo thứ tự và kiểm tra tính nguyên vẹn của dữ liệu. Nó là lớp giao diện giữa hai nhóm Application(5-7) và Network(1-3). Nhóm Application liên quan tới các thao tác trong gói, còn lớp network cho biết dữ liệu đc truyền ntn.
Lớp 3 Network: địa chỉ hóa gói global, định hướng gói đến đc nơi đích. 
Lớp 2 Data Link: nhận gói dữ liệu từ network và biến thành những frame mà gửi tới phương tiện truyền thông mạng, thêm vào dữ liệu điều khiển, checksum(kiểm tra),những địa chỉ vật lý của card mạng máy tính và gửi tới lớp dưới. Trên máy nhận lớp này sẽ tính toán lại checksum và kiểm tra nếu khớp thì gửi tín hiệu chấp nhận tới máy tính truyền dữ liệu. Nếu bị hỏng thì máy tính truyền sẽ phải truyền lại khung đó
Lớp 1 Physical: lấy khung từ data link và biến thành dữ liệu tương thích. Nếu là sợi cable đc dùng để truyền dữ liệu thì nó sẽ biến thành tín hiệu điện, cáp quang là tín hiệu ánh sáng, mạng k dây thì là từ trường. Khi dữ liệu đc nhận thì lớp này nhận tín hiệu và biến đổi thành 0 và 1 để gửi tới data link, để đặt khung frame quay trở lại và kiểm tra tính nguyên vẹn của nó.
Các dây cáp hay mạng k dây gì đó có thể đc coi là lớp 0
=> Nhận và truyền dữ liệu thực ra chỉ là ngược nhau các lớp thực hiện. Khi dữ liệu được truyền, mỗi lớp thêm một vài thông tin điều khiển tới dữ liệu mà nó được nhận từ lớp trên. Khi đó, mỗi lớp xử lí gói mà nó nhận được từ lớp trên như là một gói dữ liệu đơn lẻ mà nó không cần phân biệt dữ liệu trong đó gồm những gì.

Luồng dữ liệu tổng quát: Máy truyền dữ liệu-> luồng thông tin xuất phát từ Ct tới mạng, do đó Ct nói chuyện vs lớp thứ 7, tiếp theo thực hiện và truyền tới lớp thứ 6,...Khi máy tính nhận dữ liệu thì sẽ đi từ mạng máy tính tới Ct, tức là ngc lại đi từ lớp thứ nhất sau đó lên lớp 2,...
Tuy nhiên mô hình OSI quá đầy đủ. Bộ giao thức TCP/IP(Transmission Control Protocol/Internet Protocol) là bộ giao thức phổ biến nhất hiện tại chi là một phần k đầy đủ của mô hình. Bộ giao thức TCP/IP dùng nhiều giao thức khác nhau và được chia thành 4 tầng:
Lớp ứng dụng(Application Layer): giống 3 lớp trên cùng của OSI, Ct nch vs lớp này, dùng giao thức HTTP, SMTP(gửi nhận email) và FTP(dữ liệu các luồng gọi là stream) -> gán thông tin định tuyến để xác định đúng đường đi 1 gói tin
Lớp vận chuyển(Transport Layer): giống lớp transport của OSI, dùng UDP or TCP(gọi là segment) -> phân đoạn dữ liệu, gán header chứa thông tin điều khiển và dữ liệu, quyết định dùng tcp hay udp
Lớp Internet(Internet Layer): giống lớp network của OSI, dùng giao thức IP là chủ yếu(gọi là IP Datagram)-> giúp truyền tải dữ liệu 1 cách logic, đóng gói dữ liệu, chèn thêm header của tầng mạng và gửi xuống
Lớp truy nhập mạng(Network Access Layer): Nhiệm vụ gửi dữ liệu tới phương tiện truyền thông. Bên trong lớp này sẽ phụ thuộc vào kiểu mạng. Nếu dùng mạng Ethernet(hầu hết mạng dùng kiểu này) sẽ tìm thấy ba lớp Ethernet (LLC, MAC và Physical-LLC được viết từ Logic Link Control và  MAC được viết tắt từ Media Access Control) bên trong lớp TCP/IP này. Lớp Physical của mạng Ethernet phù hợp với lớp Physical của mô hình OSI, trong khi hai lớp khác(LLC và MAC)lại phù hợp với lớp Data Link trong mô hình OSI(dữ liệu đc truyền đi lúc này gọi là frame vì nó đc đóng vào khung, đc định tuyến đi đến đích đã chỉ định ban đầu)
Lớp này còn đc gọi là lớp kết nối: gồm một nhóm các phương thức vận hành kết nối với máy chủ, thg đc biết đến là ethernet.
Mỗi khi có gói tin đi qua trạm, TCP sẽ kiểm tra và đảm bảo sự an toàn của gói tin đó. Nếu phát hiện lỗi, 1 tín hiệu sẽ gửi đi và yêu cầu hệ thống gửi gói tin khác, qtr này đc thực hiện nhịp nhàng qua 4 lớp của TCP/IP

DNS(Domain Name System): hệ thống phân giải tên miền có vai trò chuyển đổi tên miền dạng chữ thành địa chỉ ip dạng số -> giao tiếp giữa ng và máy.
DNS server là 1 loại server chứa cơ sở dữ liệu về IP public và các name được liên kết vs chúng -> DNS server sẽ phân giải tên miền thành địa chỉ ip theo yêu cầu.
=> phân biệt Host name, Domain name và ip: host name là địa chỉ máy tính trong một mạng nội bộ local(computer-1.local), domain name là địa chỉ máy tính trên mạng internet lớn(www.google.com), ip là địa chỉ thực liên kết với host name chỉ máy tính hiểu, dùng dns server phân giải domain name sang ip để truy cập. Thông thường dùng cả hostname và domainname ms đc.

IPv4 là giao thức internet phiên bản thứ 4 cũ hơn IPv6. Ta dùng giao thức này để tạo địa chỉ ip, vs ipv4 dùng 32 bit, còn ipv6 dùng 128 bit. Do nhu cầu tăng ipv4 k tạo ra số lượng ip đủ cho hàng tỉ ng, nên chuyển quan dùng ipv6 bổ sung dung lượng địa chỉ.

https(là http có chứng chỉ ssl)(hypertext transfer protocol): là giao thức truyền tải siêu văn bản(siêu văn bản ở đây là file html,... khác với siêu dữ liệu metadata cung thêm thông tin). Nó là cách thức truyền tải dữ liệu từ web server đến các trình duyệt web và ngược lại.
HTTP la giao thức mạng có độ bảo mật kém và các trang web dùng nó có hình chấm than không bảo mật. Mạng internet hoạt động theo mô hình client-server với quy tắc các client gửi yêu cầu và chờ máy chủ hồi đáp và cả 2 phải thực hiện cùng 1 giao thức là HTTP. HTTP k được mã hóa và dễ bị hacker tấn công.
HTTPS là giao thức giống HTTP nhưng được bổ sung thêm chứng chỉ SSL và TLS. Nó mã hóa thông tin giữa máy chủ và trình duyệt đảm bảo thông tin giữa 2 máy an toàn trong qtr truyền => các trang web hiện nay đa phần là https

Cơ chế web: khi một trình duyệt web thực hiện một kết nối tới máy chủ web -> trình duyệt web tách địa chỉ làm 3 phần: tên giao thức http; tên miền của máy chủ web google.com; tên tệp HTML: toi-dang-tim-kiem.html -> trình duyệt liên hệ với máy chủ tên miền DNS server để đổi google.com sang địa chỉ ip -> trình duyệt nhờ vào kết nối internet sẽ gửi tiếp 1 yêu cầu tới máy chủ google có địa chỉ ip này qua cổng 80, dựa trên giao thức HTTP gửi yêu cầu GET, yêu cầu tệp toi-dang-tim-kiem.html(có 2 giao thức GET để nhận và POST để gửi) -> Lúc đó, 1 cookies cx đc gửi kèm từ trình duyệt đến máy chủ -> máy chủ sau đó cx gửi lại trình duyệt web các thẻ html và 1 cookies khác cx đc gửi kèm từ máy chủ tới trình duyệt web(nó ghi ở đầu mỗi trang web) -> trình duyệt đọc các thẻ html và render ra màn hình. 
Đôi khi máy chủ web còn hỗ trợ tài khoản và mật khẩu cho phép người dùng truy cập vào trang web. Các web chuyên nghiệp còn mã hóa các thông tin khi truyền nhằm tránh lộ các thông tin nhạy cảm như thẻ tín dụng, ví dụ mã hóa bằng chứng chỉ ssl.

website động là web chạy giao thức http tích hợp thêm vc xử lý thông tin và truy xuất dữ liệu -> VD:facebook là web động có thể cập nhật thông tin bất cứ lúc nào bởi ng dùng or tương tác comment. Nó dùng html,MySQL,PHP,...
website tĩnh là web chỉ sử dụng hoàn toàn HTML đăng tải thông tin cố định như 1 tờ báo-> sau khi tải file html từ máy chủ thì trình duyệt sẽ biên dịch mã và hiển thị nội dung của trang web-> ng dùng sẽ k thể tương tác j vs nó -> nếu muốn thay đổi đòi hỏi ng quản lý phải có kỹ thuật làm lại để in ra tờ báo mới.

Cookies: là một đoạn văn bản mà web server lưu trên ổ cứng của ta khi truy cập một website. Website lưu thông tin trên máy tính của ta dưới dạng cặp giá trị key-value. VD: UserID    A9A3BECE0563982D   www.goto.com/ => có các trang web có nhiều thông tin hơn như sesstion-time, expiration date... nhưng phần lớn là userID thôi. Cookies này đc lưu trên thư mục ở ổ cài win của máy tính và có thể đc truy cập. Tuy nhiên Microsoft Edge đã chặn quyền truy cập bằng file explorer vì k muốn ng bth truy cập file đó. 
Cơ chế: Khi truyền url đi, nó sẽ tìm ở file cookies trong ổ cứng thông tin về trang web, nếu có file cookies của trang web đó thì sẽ gửi các cặp key value đi, nếu k thì tức là đây là lần ta truy cập trang web này lần đầu tiên, server sẽ gửi file html và kèm với 1 cookies về trang web lưu vào ổ cứng. Nếu tim thấy file cookies thì nó sẽ gửi kèm luôn(gửi đi luôn chứ kp gửi copy), server sẽ tìm trong key value đó trong storage của mình và gửi html, gửi trả lại cả cookies cho user. 
Vai trò: cookies lưu thông tin về tài khoản mật khẩu thì ng dùng trong cùng máy sẽ k phải đăng nhập lại nh lần. Ngoài ra cx có nh cách sử dụng cookies khác, ng quản lý có thể thống kê số lượng máy tính truy cập trang web dựa vào số lượng cookies, các site thương mại có thể tùy chọn giỏ hàng và thanh toán, mỗi cookies có 1 id và cho phép thêm các thứ khác vào giỏ hàng, cookies cx có thể lưu thông tin khác của khách truy cập vào website ví dụ 1 số web có khả năng tùy chỉnh giao diện sáng tối chẳng hạn thì khi truy cập lại lần sau ta lại có thể dùng tiếp giao diện tối từ lần trc ta chỉnh lưu vào cookies...
Tức là mỗi một máy tính truy cập 1 trang web thì sẽ nhận đc 1 cookies của trang web(k liên quan gì đến tk mk mà là máy tính), có thể nhiều máy tính truy cập vào 1 tài khoản thì có các cookies khác nhau=> ta hoàn toàn có thể kiểm soát vc nhận hay gửi cookies hay k từ 1 trang web bằng vc chặn nó.
Nhược điểm:
- Có thể gặp các vấn đề về riêng tư khi nhà cung cấp lấy các thông tin về email, địa chỉ từ cookies.
- Double-Click là hiện tượng công ty dùng các file ảnh nhỏ (1x1)px mà ta k thể thấy, các file ảnh này sẽ khiến server gửi các cookies về máy ta và các cookies này sẽ lấy thông tin của ta về các website ta đã truy cập tren thanh tìm kiếm -> nó như là gián điệp
- Sử dụng đa máy tính: VD ta dùng máy tính ở nhà và máy tính ở trg nhưng ta lưu thông tin sở thích khác nhau, vì 2 máy có cookies khác nhau nên trang web sẽ nghĩ là 2 ng khác nhau truy cập. Điều đó là do ID của 2 máy trong cookies đối với trang web đó là khác nhau. Đó là vấn đề mà các dev phải tự lo liệu. Họ có thể ép ng dùng đăng ký vào hệ thống để giải quyết vấn đề này: khi đó server lưu cookies chứa các thông tin đăng ký, xong ta đăng nhập từ một máy tính khác, thì server sẽ đổi file cookies trên máy tính đó để chứa ID có liên quan đến thông tin ĐK từ trc => truy cập nh máy tính vs cùng ID nhưng cookies khác nhau -> NSX sẽ biết là có bnh ng truy cập.

Socket: là điểm cuối (được gọi là end point) của một liên kết truyền thông 2 chiều giữa 2 chương trình chạy trên môi trường mạng internet. Nó giúp cho sự kết nối giữa server và client khi truyền tải dữ liệu và bị ràng buộc bởi 1 port, nhằm mục đích để các tầng TCP thực hiện chức năng định danh ứng dụng mà nó gửi đến=> tức là nếu nói 2 máy truyền dữ liệu cho nhau thì chưa thực sự là ổn mà phải là 2 ứng dụng trên máy trao đổi dữ liệu cho nhau. Khi trao đổi như v thì nó sẽ dùng bộ giao thức TCP/IP qua internet trải qua 4 tầng giao thức thì trong tầng transport nó dùng TCP/UDP để truyền dữ liệu thì đoạn nối giữa tầng transport và tầng application chính socket -> nó có vai trò xđ ứng dụng nào trên máy đang kết nối(hiển nhiên vì k thể truyền nhầm ứng dụng đc vd truyền email thì phải vô đúng ứng dụng gmail chẳng hạn).
Nói trong phần mềm thì nó là 1 liên kết truyền thông. Trong server vật lý thì nó là Socket CPU - phần ổ cắm của CPU nối CPU với bo mạch chủ, có 4 loại là PGA, ZIF, LGA, BGA. Còn lập trình socket là lập trình dùng socket để ng dùng dễ dàng kết nối truyền tải, r thông qua mạng internet để nhận=> ở đây ta chỉ xét lập trình socket thao tác với liên kết truyền thông
Đặc điểm:có thể dùng nh socket TCP cùng lúc để nâng cao năng suất làm vc, nó hỗ trợ nh hệ điều hành, tương thích nh ngôn ngữ, cấu hình máy tính. Socket chỉ hoạt động kết nối đc khi có ip,port(đã biết từ đầu). Nó là liên kết 2 ứng dụng kp 2 máy, nên có thể dùng vs 2 ứng dụng trên cùng 1 máy, khi đó sẽ có cùng ip nhưng buộc khác port.
Có 4 loại socket:
Stream Socket: dùng giao thức TCP, chỉ hoạt động khi hai máy đã kết nối thành công với nhau-> vì chỉ có 1 địa chỉ ip 2 máy nên buộc một máy phải chờ máy kia chấp nhận kết nối(máy nhận chấp nhận ip máy chủ là đồng ý nhận)
Datagram Socket: dùng UDP, 2 máy k cần kết nối vẫn gửi đc-> thg dùng game online
WebSocket: kết nối client-server trong ứng dụng web bằng internet bằng TCP Socket-> nhược điểm là chưa hỗ trợ hoàn toàn các trình duyệt và dịch vụ-> thg dùng cho real time như chat, hiển thị biểu đồ hay thông tin chứng khoán do độ trễ thấp
UnixSocket: như websocket nhưng hiệu quả hơn nhiều. Vc trao đổi trên cùng máy tính sẽ thực hiện ở nhân hệ điều hành -> buộc cùng máy chủ ms kết nối đc; vc phân quyền tập tin đôi khi gây lỗi.

Giao thức mạng(network protocol): hai thiết bị mạng muốn giao tiếp (từ server->router->endpoint) chỉ cần tuân theo các giao thức này là đc bất kể sự khác biệt. VD: TCP là cốt lõi của TCP/IP, các ứng dụng lớn hiện nay đều dùng; UDP; IP(bộ quy tăc cho phép thiết bị giao tiếp thiết bị khác qua mạng IP-based như internet chẳng hạn); Để truyền tải, còn có FTP, HTTP,.. ở tầng ứng dụng
Có 3 loại giao thức mạng lớn: giao tiếp-Ethernet; quản lý-SMTP(Simple Mail Transfer Protocol); bảo mật-SSH(Secure Shell). Bên cạnh đó là hàng ngàn các giao thức mạng con khác.
Các loại giao thức mạng khác:POP3(Post Office Protocol 3) dùng để tải email từ mail server; SMTP(Simple Mail Transfer Protocol):gửi và phân phối email đi;FTP:truyền tệp liên máy;Telnet:kết nối hai hệ thống từ xa;Ethernet: cho phép hai thiết bị trao đổi trên cùng 1 mạng->ta cắm cáp vào card ethernet để kết nối máy tính vs mạng;..

Phân biệt mạng máy tính và mạng internet:
Ta hiểu mạng máy tính(1 hệ thống mạng) là một tập hợp các thiết bị truyền thông có thể trao đổi thông tin với nhau thông qua dây or kết nối k dây(VD: wifi). Còn mạng internet là tập hợp các mạng máy tính có thể giao tiếp với nhau. Ví dụ 2 máy tính kết nối với nhau qua wifi thì tạo thành 1 mạng máy tính -> 2 máy tính đó là 2 nút trong mạng LAN. Nhưng wifi lại có 1 đặc điểm là cho phép 2 máy tính đó truy cập vào internet, như v 2 máy tính đó cx là nút trong cái mạng internet rộng lớn trên toàn thế giới => 2 máy có thể trao đổi thông tin vs nhau or trao đổi thông tin với các website trên internet đều ok. Còn nếu 2 máy đc nối vs nhau bằng dây thì vẫn là 1 mạng máy tính nhưng k là nút của mạng internet và chỉ trao đổi đc thông tin riêng 2 máy.
Nv rõ ràng 2 máy tính hoàn toàn có thể trao đổi vs nhau thông qua internet rộng lớn chứ k cần qt tới mạng máy tính làm j? -> sai vì mạng máy tính có thể cho phép trao đổi thông tin trong nh TH đặc biệt trong doanh nghiệp vs tốc độ cao mà mạng internet k làm đc.
VD: trong mạng máy tính ta có thể kết nối máy in vs máy tính nhờ cùng truy cập wifi tạo ra 1 mạng máy tính, nhưng rõ ràng máy in thì làm sao vào đc gg drive lấy tệp ta tải lên để in đâu nên buộc dùng mạng máy tính để kết nối 2 máy còn j => các hệ thống mạng có thể kết nối vs hệ thống mạng internet sẽ chia sẻ ra ngoài nếu k chỉ dùng đc trong hệ thống đó mà thôi; Mạng máy tính sử dụng địa chỉ ip mạng nội bộ private hoàn toàn còn internet dùng ip public; trong doanh nghiệp, họ dùng mạng máy tính để trao đổi còn mạng internet phần lớn chỉ để truy cập tin tức thôi;
Mạng internet chỉ có 1 loại là dịch vụ WorldWideWeb còn mạng máy tính có nh loại:
Mạng LAN(Local Area Network): mạng cục bộ trong nhà, văn phòng. VD: cục wifi trong nhà ta là mạng LAN. Băng thông lớn
Mạng MAN(Metropolitan Area Network): Phạm vi kéo dài vài km, nhóm các văn phòng gần nhau trong thành phố
Mạng WAN(Wide Area Network): Phạm vi quốc gia, lục địa. VD: mạng viettel -> băng thông thấp
Có nhiều loại mô hình mạng: Star/Bus/Ring/Mesh Network
Ngoài ra còn có nh loại mạng khác: SAN(mạng lưu trữ),PAN(mạng cá nhân),EPN(mạng riêng của doanh nghiệp),VPN
VPN là mạng riêng ảo -> tạo kết nối mạng an toàn

IP,Subnet Mask và Default Gateway:
Mỗi máy có 1 IP khác nhau(kể cả cùng một mạng), phần lớn hiện nay dùng IPv4. IPv4 có 32 bit chia làm 4 nhóm số, mỗi nhóm gồm 8 bit dữ liệu gọi là octet nên mỗi nhóm số chạy từ 0-255.
Để có đc các network có địa chỉ duy nhất trên internet như hiện giờ thì tổ chức Internet Assigned Numbers Authority(IANA) - tổ chức cấp phát số hiệu Internet sẽ chia các địa chỉ k dự trữ cho các tổ chức đăng ký tên miền trên khắp thế giới. Các tổ chức đó sẽ phân phối chúng cho các nhà Internet Service Provider(ISP) lớn và họ sẽ gán chúng cho các đại lý và các ISP nhỏ hơn. Các ISP sẽ cấp 1 IP public cho mỗi máy tính kết nối trực tiếp đến ISP ví dụ viettel cung ip public cho khách hàng => các địa chỉ đc cấp 1 cách tự động đến mỗi máy tính khi kết nối.
Bên cạnh đó thì tổ chức IANA cx dự trữ một ít địa chỉ IP mà sẽ kbh sử dụng trên internet để làm IP Private.
Địa chỉ IP phân thành 5 lớp: 
Lớp A gồm các địa chỉ IP có oc-tet đầu tiên trong k từ 1-126; B từ 128-191;C từ 192-223; D từ 224-239; E từ 240-255=> thực tế chỉ có lớp A,B,C dùng cho các nút mạng, D dùng cho vài ứng dụng truyền thông đa phương tiện như tải video trên mạng, riêng E vẫn chưa đc dùng làm j
Subnet mask đi kèm vs IP. Vì TCP/IP quy định hai địa chỉ IP muốn làm vc với nhau thì phải chung một Net ID(viêt tắt của Network ID)(thì có thể trao đổi TT k qua router). Subnet mask ra đời là để xác định Net ID. Nó chỉ có 225 or 0, có 3 loại subnet mask là 225.0.0.0 dùng cho địa chỉ mạng lớp A,225.225.0.0 lớp B,225.225.225.0 cho lớp C => xác định Net ID: lấy phần của IP có subnet mask tương ứng của lớp đó là 225 ra NetID còn phần còn lại là Host ID
Default Gateway: Do TCP/IP quy định nếu 2 địa chỉ IP có NetID khác nhau thì lúc đó thông tin buộc truyền qua router bằng cách gửi qua một cổng thoát mặc định gọi là Default Gateway của IP đó(khi NetID khác nhau đó là do ở hai mạng khác nhau => default gateway giúp máy tính truyền tin liên mạng) -> nó là cổng mặc định của mạng máy tính, gói tin sẽ đến địa chỉ này r ms đi đến mạng khác, là cửa của router
VD ký hiệu: 192.168.1.0/24=> số 24 có nghĩa là dùng 24 bit đầu làm net id, 8 bit sau làm host id

DHCP là Dynamic Host Configuration Protocol=> 1 giao thức giúp cho vc phân phối ip trong một mạng. Nó sẽ yêu cầu địa chỉ ip từ 1 router và router sẽ gán 1 địa chỉ ip động khả dụng cho thiết bị để giao tiếp trên mạng.
IP tĩnh là ip cố định, k đổi. IP tĩnh được cài đặt cố định trong máy tính của người dùng hoặc trên các máy chủ. Muốn dùng thì thiết bị phải được cấu hình đúng với router để chúng có thể giao tiếp.
IP động là IP k cố định đc cấp phát tự động từ dịch vụ DHCP của modem cho mỗi kết nối hay node của mạng.

Proxy Server: Hoạt động ở lớp Application trong mô hình tham chiếu OSI. Nó làm nhiệm vụ chuyển tiếp thông tin và kiểm soát tạo sự an toàn khi client truy cập internet. 
Cơ chế: VD công ty dùng một máy tính đại diện làm proxy server => chỉ proxy này có modem và account truy cập internet-> các client muốn truy cập internet thì nối mạng LAN vào proxy này. Yêu cầu của ng dùng sẽ qua trung gian proxy server thay thế cho server thật sự cần giao tiếp. Qua proxy, công ty sẽ kiểm soát mọi thứ của nhân viên khi truy cập mạng, đồng thời giấu định danh địa chỉ mạng nội bộ để tránh thâm nhập từ bên ngoài. Còn các nhà cung cấp dịch vụ internet VD:viettel sẽ phối hợp proxy với tường lửa tạo firewall proxy nhằm lọc các website k mong muốn, VD: viettel chặn web sex.
Ý nghĩa khác: nó còn lưu trữ thong tin khách hàng trong bộ nhớ làm giảm thời gian truy cập => mọi yêu cầu client phải gửi qua proxy server -> nó kiểm tra nếu website này k bị chặn và đc lưu trữ cục bộ thì có thể truy cập trang mà k cần kết nối internet, nếu k có thì sẽ chuyển url đến server thật -> qua dns server ->internet. Nhờ tính năng lưu trữ cục bộ các trang web thg truy cập mà giảm chi phí, tăng tốc độ

Các thiết bị trong kết nối mạng CN: 
Repeater: khi truyền tin đi xa thì tín hiệu bị hao hụt trên đường truyền-> repeater nằm ở lớp vật lý trong mô hình OSI có tác dụng khuếch đại tín hiệu vật lý ở đầu vào và cung cấp năng lượng để đầu ra truyền đi đc xa
Hub: coi là repeater nh cổng. Thg trong mạng hình sao thì hub là trung tâm của mạng, tín hiệu vào một cổng sẽ đưa đến tất cả các cổng khác. Có Active Hub dùng phổ biến khuếch đại tín hiệu như repeater, cho ra tín hiệu ở những cổng còn lại. Smart hub tương tự Active hub nhưng tích hợp thêm chip có khả năng dò lỗi
Bridge: thiết bị thuộc lớp liên kết (data link) của mô hình OSI, vai trò kết nối 2 mạng thành một mạng lớn duy nhất, thg làm cầu nối giữa hai mạng ethernet. Nó quan sát gói tin trên mọi mạng. Khi thấy một gói tin chuyển giữa 2 mạng nó sẽ sao chép và gửi tới mạng đích=> đơn giản nó là cầu nối cho vc trao đổi thôi, nó xử lý đc nh lưu thông trong cùng một lúc.
Switch: coi là 1 bridge nh cổng. 1 bridge chỉ có 2 cổng liên kết 2 mạng với nhau nhưng switch thì kết nối đc nh dựa vào số cổng. Nó cũng quan sát các gói tin trao đổi và xây dựng nên bảng MAC address để các gói tin đến đúng địa chỉ. Switch nhanh hơn nh so với repeater.
Router: thiết bị ở lớp network của OSI. kết nối 2 hay nhiều mạng IP với nhau. Mọi máy tính đều có thể giao tiếp đc vs router. Router kết nối nhiều loại mạng khác lại với nhau từ ethernet tốc độ cao đến đường dây điện thoại tốc độ chậm. Nó chậm hơn Bridge vì chúng đòi hỏi nhiều tính toán hơn để tìm ra cách dẫn đường cho các gói tin, đặc biệt khi các mạng kết nối với nhau không cùng tốc độ. Một mạng hoạt động nhanh có thể phát các gói tin nhanh hơn nhiều so với một mạng chậm và có thể gây ra sự nghẽn mạng. Do đó, Router có thể yêu cầu máy tính gửi các gói tin đến chậm hơn. Một vấn đề khác là các Router có đặc điểm chuyên biệt theo giao thức - tức là, cách một máy tính kết nối mạng giao tiếp với một router IP thì sẽ khác biệt với cách nó giao tiếp với một router Novell hay DECnet. Hiện nay vấn đề này được giải quyết bởi một mạng biết đường dẫn của mọi loại mạng được biết đến. Tất cả các router thương mại đều có thể xử lý nhiều loại giao thức, thường với chi phí phụ thêm cho mỗi giao thức.
Gateway: cho phép nối 2 giao thức với nhau(khác vs chỉ số default gateway đi kèm với ip). Ví dụ: 1 mạng sử dụng giao thức IP và mạng khác sử dụng giao thức IPX, Novell, DECnet, SNA... hoặc một giao thức nào đó thì Gateway sẽ chuyển đổi từ loại giao thức này sang loại khác. Qua Gateway, các máy tính trong các mạng sử dụng các giao thức khác nhau có thể dễ dàng "nói chuyện" được với nhau.
Modem: là từ viết tắt của Modulator and Demodulator có nghĩa là bộ điều chế và giải điều chế để biến đổi các tín hiệu số thành tín hiệu tương tự(digital signal thành analog) và ngược lại để đi qua mạng thoại. Tín hiệu điều chế ở đây có thể là bất kì tín hiệu điện truyền thông hiện nay. Ta k bàn cách nó điều chế ở đây.

Giao thức H323: giao thức truyền tải dữ liệu dùng trong hội nghị truyền hình, cuộc gọi voip. Cuộc gọi voip là gọi truyền cả âm thanh, hình ảnh => tiết kiêm chi phí và tiện lợi. Ví dụ: video call qua facebook. Giao thức này bao gồm thiết bị đầu cuối, đơn vị đa điều khiển, gatekeeper, gateway. Hiểu v là đc

Tổng kết lại những cái trên, ta có hành trình 1 gói tin cơ bản trong máy: 
Ta có một tệp tin cần truyền đi trong máy nó sẽ đc gửi tới bộ giao thức TCP/IP
-> Tại lớp Application, dữ liệu và yêu cầu từ ng dùng sẽ tạo thành 1 khối data lớn theo khuôn nhất định(VD: khi nhập địa chỉ trang web và gửi đi thì yêu cầu HTTP GET sẽ tạo ra)
-> Tại lớp transport,dữ liệu đc chia nhỏ và đóng gói. 1 header đc thêm vào nhằm theo dõi luồng dữ liệu tại máy đích. Những gói tin nhỏ gọi là các segment. Lớp này cx gán cho application 1 định danh là port number xác định sẽ dùng cổng nào để thực hiện. Nó sẽ tự động sử dụng TCP/UDP sao cho phù hợp
-> Tại lớp network, các segment đc gán thêm 1 header gọi là ip header, bao gồm 2 thông tin chính là Source IP và Destination IP. Bh nó gọi là Datagram. Source IP là địa chỉ IP của máy gửi, địa chỉ này có thể được đặt bởi người dùng hay cấp phát động qua giao thức DHCP. Giao thức DHCP nói một cách đơn giản là khi một máy tính được kết nối vào một mạng mà địa chỉ IP global của nó chưa được đặt, DHCP Server (Cài đặt trên Router) sẽ lấy một địa chỉ IP sẵn có trong “bồn” địa chỉ IP dùng để cấp phát cho các client, cấp phát cho DHCP client (máy tính cần cấp phát địa chỉ IP). DHCP là giao thức của lớp Application
-> Địa chỉ IP máy đích có thể nhập trực tiếp hay được xác định qua giao thức DNS. Nhập trực tiếp ví dụ như thay vì nhập http://google.com ta có thể nhập trực tiệp địa chỉ http://118.69.249.158/ vào trình duyệt, kết quả đều dẫn tới website tìm kiếm này. Vậy nếu ta không biết chính xác địa chỉ IP cần gửi tới, thì đầu tiên, máy tính sẽ dò tìm trong DNS cache, nơi lưu những thông tin về những địa chỉ đã truy cập, ta có thể xem thông tin DNS Cache bằng câu lệnh ipconfig /displaydns trong Command Prompt. Nếu không tìm thấy IP tương ứng với tên miền cần tìm, một DNS Request sẽ được gửi tới DNS server để xử lý. DNS server sẽ phản hồi những thông tin cần thiết để máy tính sử dụng, những thông tin sẽ được lưu ngược lại vào DNS cache để sử dụng vào lần sau.
-> Tại lớp data link và physical: Để một gói tin có thể gửi tới đích, chúng ta cần thêm một loại địa chỉ nữa đó là địa chỉ MAC hay địa chỉ vật lý. Địa chỉ này là độc nhất cho mọi thiết bị. Một header lại được thêm vào Datagram, hai thông tin chính là Source MAC và Destination MAC. Các gói tin bây giờ được gọi là Frame. Source MAC chính là địa chỉ MAC của máy gửi, ta có thể kiểm tra địa chỉ MAC của máy tính bằng câu lệnh getmac trong Command Prompt. Để xác định địa chỉ Destination MAC dựa vào Destination IP, máy tính sẽ từ động tìm kiếm trong ARP cache. Ta có thể xem thông tin ARP cache bằng cách sử dụng câu lệnh arp –a trong Command Prompt. Nếu không tìm thấy Destination MAC tương ứng với Destination IP, máy tính sẽ sử dụng giao thức ARP. Một gói tin gọi là ARP Request đính kèm Destination IP sẽ được gửi Broadcast tới tất cả các máy trong mạng chứa máy nguồn, một số trường hợp xảy ra như sau:
  +) Nếu Destination IP là địa chỉ IP cục bộ của mạng đó, máy tính mang địa chỉ IP này sẽ trả lời với địa chỉ MAC của nó về cho máy gửi ARP Request. Vậy Destination MAC ở đây chính là địa chỉ MAC của máy tính cùng mạng với máy gửi.
  +) Nếu Destination IP là địa chỉ IP của mạng khác, Router chứa mạng này sẽ phát hiện ra điều đó và trả lời với địa chỉ MAC của router nên Destination MAC ở đây sẽ là địa chỉ MAC của router.
  +) Nếu Destination IP là địa chỉ IP của mạng khác và địa chỉ Default Gateway cũng như Subnetmask đã được đặt, máy tính sẽ sử dụng thông tin này để xác định được Gateway(cổng vào router) và gửi gói tin đến đây. Destination MAC ở đây sẽ là địa chỉ của Gateway, thường sẽ là một router.
Destination MAC sau khi được xác định sẽ lưu lại vào ARP Cache cho lần sử dụng tiếp theo, đồng nghĩa tầng datalink cho phép ta gửi data tới phần cứng là 1 router chứ kp MAC của máy đích luôn dâu. Sau khi xác định đầy đủ địa chỉ Source MAC và Destination MAC, các Frame bây giờ sẽ được đưa xuống lớp Physical, được mã hóa và chuyển đổi thành các tín hiệu vật lý thích hợp, để đưa lên đường truyền.
-> Ra khỏi máy tính: các máy tính trong cùng một mạng thường sẽ được tập hợp lại thông qua Switch. Vậy nên điểm đến tiếp theo của frame sẽ là một port Switch, tại đây, frame được đặt trong một hàng đợi, mỗi frame có mức ưu tiên khác nhau và switch dựa vào điều này để xử lý các frame quan trọng trước. Tại đây, Switch sẽ mở gói tin ra và đọc địa chỉ Source MAC, lưu vào MAC Address table, tại đây lưu số port và địa chỉ MAC kết nối trực tiếp với port này, tiếp theo đọc Destination MAC của gói tin so sánh với bảng MAC Address table của switch và có những hành động tương ứng:
  +) Nếu Destination MAC là địa chỉ tồn tại trong MAC address table, switch sẽ gửi gói tin qua port tương ứng.
  +) Nếu Destination MAC là địa chỉ không tồn tại trong MAC Address table hoặc là địa chỉ Broadcast, switch sẽ gửi gói tin ra tất cả các port trừ cổng nhận vào, vì k rõ 1 port cụ thể nào
  +) Nếu Destination MAC trùng với Source MAC, frame sẽ bị drop – không gửi ra bất kỳ port nào.
Mac Address Table là 1 bảng trong switch có sẵn r
Như vậy, nếu máy nhận nằm trong cùng một mạng với máy gửi, thì chỉ cần thông qua switch, frame đã có thể được chuyển tới đích. Trường hợp máy nhận nằm khác mạng với máy gửi. Frame sẽ được chuyển tiếp tới Router để xử lý.
-> Tại router(của máy gửi tin đó): Đầu tiên, Router sẽ gỡ bỏ header của lớp Data Link (bao gồm Source MAC và Destination MAC). Tiếp theo, Router đọc thông tin lớp Network (Bao gồm Source IP và Destination IP). Router sử dụng Destination IP, so sánh với Routing Table. Routing Table chứa danh sách các đường đi được sử dụng để chuyển gói tin và interface đầu ra tương ứng. Các đường đi này có thể được gán tĩnh bởi người quản trị Router đấy, hoặc có thể được thêm vào qua các giao thức định tuyến như OSPF, EIGRP, RIP, IS-IS….. Các giao thức này nhằm tìm ra đường đi ngắn nhất đến mạng đích và lưu vào Routing Table. 
  +) Nếu không tìm được đường đi nào tương ứng với địa chỉ mạng của Destination IP, hoặc trường TTL trong IP Header (sẽ giảm dần qua mỗi router, dùng để tránh trường hợp gói tin bị loop vô tận) bằng 0, gói tin sẽ bị drop và Router gửi thông báo “Destination host unreachable” ngược lại cho máy gửi.
  +) Nếu tìm được đường đi tương ứng với địa chỉ mạng của Destination IP, Router thêm lại header chứa Source MAC – chính là địa chỉ MAC của interface tương ứng với đường đi tìm được và Destination MAC – là địa chỉ của MAC của interface Router tiếp theo. Như vậy, trong suốt quá trình gửi đi, Source IP và Destination IP luôn được giữ nguyên (trừ trường hợp sử dụng NAT, VPN) còn Source MAC và Destination MAC sẽ thay đổi mỗi khi qua Router.
Quá trình trên sẽ được lặp lại cho đến khi Router phát hiện ra Destination IP nằm chung mạng với một Interface của Router. Khi đó Router cũng sẽ sử dụng giao thức ARP để xác định địa chỉ MAC của máy đích, và dùng nó để làm Destination MAC và gửi gói tin đến máy đích.

Thông não: google có nhiều máy chủ và nh IP adress chứ kp ta dns phân giải google.com thành mỗi một ip duy nhất. Nó sẽ phân giải và láy dữ liệu từ ip đang sẵn sàng sử dụng tùy theo vùng
=> lệnh lấy các ip address của 1 trang web: VD: nslookup google.com
lệnh netstat -n sẽ hiển thị danh sách các địa chỉ ip trang web đang có kết nối ở thời điểm hiện tại. Hiển thị giao thức kết nối, ip và port của local, ip và port của máy đích, trạng thái kết nối
Nếu kỹ hơn chạy netstat -abf 5 trong cmd dưới quyền admin sẽ hiển thị mọi kết nối vs máy tính ở thời điểm hiện tại. a là liệt kê mọi kết nối, –b là để hiển thị ứng dụng nào đang sử dụng các kết nối đó. –f dùng để hiện thị đầy đủ tên DNS cho mỗi kết nối, số 5 có nhiệm vụ lọc kết nối sau mỗi 5 giây (để theo dõi hiệu quả hơn). establish là đang kết nối.
